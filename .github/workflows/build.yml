name: Build Galactic Cinematic Game

on:
  push:
    tags: ['v*']
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build executable
      run: |
        python build.py
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: GalacticGame-Windows-py${{ matrix.python-version }}
        path: dist/
        retention-days: 30

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev
        sudo apt-get install -y libgl1-mesa-dev libglu1-mesa-dev
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build executable
      run: |
        python build.py
    
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: GalacticGame-Linux-py${{ matrix.python-version }}
        path: dist/
        retention-days: 30

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build executable
      run: |
        python build.py
    
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: GalacticGame-macOS-py${{ matrix.python-version }}
        path: dist/
        retention-days: 30

  create-release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          GalacticGame-Windows-py3.8/GalacticCinematicGame.exe
          GalacticGame-Windows-py3.9/GalacticCinematicGame.exe
          GalacticGame-Windows-py3.10/GalacticCinematicGame.exe
          GalacticGame-Linux-py3.8/GalacticCinematicGame
          GalacticGame-Linux-py3.9/GalacticCinematicGame
          GalacticGame-Linux-py3.10/GalacticCinematicGame
          GalacticGame-macOS-py3.8/GalacticCinematicGame
          GalacticGame-macOS-py3.9/GalacticCinematicGame
          GalacticGame-macOS-py3.10/GalacticCinematicGame
        body: |
          # ðŸš€ Galactic Cinematic Game - Version ${{ github.ref_name }}
          
          ## Installation
          
          ### Windows
          1. Download `GalacticCinematicGame.exe`
          2. Run the executable
          
          ### Linux
          1. Download `GalacticCinematicGame`
          2. Make executable: `chmod +x GalacticCinematicGame`
          3. Run: `./GalacticCinematicGame`
          
          ### macOS
          1. Download `GalacticCinematicGame`
          2. Run: `./GalacticCinematicGame`
          
          ## Controls
          - **WASD**: Movement
          - **Arrow Keys**: Rotation
          - **R/F**: Up/Down
          - **ESC**: Exit
